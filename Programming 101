Arithmetic Operator questions: 
((10 + 4) - 8) % 2 = 6 % 2 = 0 
(11 < 11) || (23 % 2 == 1) → True 
(14 - 11) * 5 % 6 = 3*5 % 6 = 15 % 6 = 3
(11 % 4 / 2 <= 1) && (17 % 2 != 0) = 3/2 <= 1 && 1 != 0 → False 

Function Questions:
Write a function that takes as an input an integer n and returns that integer modulo 4.
def f(var n){
	return n % 4 
}

Write a function called neither that takes in three inputs: a value v, and two functions f and g 
(both of which return booleans). The neither function should return whether both f and g return 
false when called with v as an input.

	def neither(var v, f, g){
		boolean a = f(v); 
		boolean b = g(v); 
	if (a == false && b == false): 
		return true 
	else: 
		return false 

Array Problems 
boolArr[3] && boolArr[1] → True && False → False
boolArr[5] && (boolArr[2] || (intArr[0] - intArr[2] + intArr[5] == 1))
True && False || 8-2+3 == 1 → False || 9 == 1 → False || False → False 
(intArr[4] * intArr[1]) % intArr[2] = -5*-4 % 2 = 20 % 2 = 0
!(doubleArr[2] - doubleArr[3] < doubleArr[0]) = !(9.8787 - 0.003 < 6.4) = !(False) = True 

Practice Problems
1. sumBelow 
  sumBelow(6) -> 10
  sumBelow(3) -> 3
  sumBelow(-1) -> 0

2. sumArray 
  allDivisible([3, 6, 0, 9], 3) → [3, 6, 0, 9] 
  allDivisible([100, 225, 802, 445], 5) → [100, 225, 445] 
  allDivisible([28, 8, 16, 2, 4004, 20], 4) → [28, 8, 16, 4004, 20] 

3. 
allEven: True, True, True, True,  False
n:       2,    6,    4     1,     0
nEven:   True, True, True, False, True
next:    True, True, True, False, False

4. sumOutput
sumOutputs([2.0, 1.2, 4.3, 10.2], g) -> (2^2)+(1.2^2)+(4.3^2)+(10.2^2) = 127.97
sumOutputs([2.0, 1.2, 4.3, 10.2], h) -> (2*0.5)+(1.2*0.5)+(4.3*0.5)+(10.2*0.5) = 8.85

5. Use a while loop to sum up the first 15 multiples of 3. You should start with a 
variable sum (and whatever other variables you think you need), and in the end, 
sum should hold your answer.

var x = 0 
var sum = 0 
var count = 0 
while (count <= 15){
	sum = sum + x 
	x = x + 3 
	count = count + 1 
}

6. Write a function that takes as an input an array of integers arr and returns the 
sum of all of the values modulo 4 (hint: you can use the sumOutputs function)

def moduloFour(var x){
	return x % 4
}

def sumOutputs(var arr)
	var sum = 0.0 
	for (var n : arr) {
		sum = sum + moduloFour(n)
	}
	return sum 
}

7. Write a function that takes an array arr and uses a for each loop to determine 
if any of the values in an array arr are divisible by 7.

def divisibleBySeven(var arr){
	var divisible = true 
	for (var n : arr){
		var nDivisible = (n % 7 == 0)
		divisible = divisible && nDivisible 
	}
	return divisible 
}
